# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

env:
  AZURE_FUNCTIONAPP_NAME: tlinkFunctionApp # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "." # set this to the path to your web app project, defaults to the repository root
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run build
      - run: npm test
      - run: npx semantic-release

      # ZIP the artifact
      - name: Zip artifact for deployment
        run: zip artifact.zip ./* -r

      # Publish artifact
      - name: Publish artifact
        uses: actions/upload-artifact@v3
        with:
          name: buildArtifact
          path: "./artifact.zip"

  deploy-dev:
    runs-on: ubuntu-latest
    environment: "dev"
    needs: build

    steps:
      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: buildArtifact
          path: "./artifact.zip"

      # Unzip the artifact
      - name: unzip artifact for deployment
        run: unzip artifact.zip

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  deploy-uat:
    runs-on: ubuntu-latest
    environment: "dev"
    needs: deploy-dev

    steps:
      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: buildArtifact
          path: "./"

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  deploy-prod:
    runs-on: ubuntu-latest
    environment: "dev"
    needs: deploy-uat

    steps:
      # Download published artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: buildArtifact
          path: "./"

      - name: "Run Azure Functions Action"
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
